package Union_Find_Disjoint_Sets.P924_Minimize_Malware_Spread;

import java.util.*;

public class Solution {

    public static class UnionFind{
        int[] parent;
        int[] size;

        public UnionFind(int n) {
            parent = new int[n];
            size = new int[n];
            for(int i = 0; i < n; i++) {
                parent[i] = i;
                size[i] = 1;
            }
        }

        public int find(int x) {
            if (x != parent[x]) parent[x] = find(parent[x]);
            return parent[x];
        }

        public void union(int x, int y) {
            int px = find(x);
            int py = find(y);
            if (px != py) {
                parent[py] = px;
                size[px] += size[py];
            }
        }

        public int[] getParent() {
            return parent;
        }

        public int[] getSize() {
            return size;
        }
    }

    public int miniMalwareSpread(int[][] graph, int[] initial) {
        int n = graph.length;

        UnionFind uf = new UnionFind(n);
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n; j++) {
                if (graph[i][j] == 1) {
                    uf.union(i, j);
                }
            }
        }

        int[] parent = uf.getParent();
        int[] size = uf.getSize();
        int[] malwareCountOfEachNode = new int[n];

        for(int i : initial) {
            malwareCountOfEachNode[uf.find(i)]++;
        }

        Arrays.sort(initial);
        int maxSize = 0, malwareInMaxSize = initial[0];

        for(int i : initial) {
            int root_of_THIS_malware = uf.find(i);
            int malWareCount_of_THIS_node = malwareCountOfEachNode[root_of_THIS_malware];
            if (malWareCount_of_THIS_node == 1) {
                int current_size_of_node = size[root_of_THIS_malware];
                if (current_size_of_node > maxSize) {
                    maxSize = current_size_of_node;
                    malwareInMaxSize = i;
                }
            }
        }

        return malwareInMaxSize;
    }
}
